name: Deploy latest version to Github Releases

on:
  push:
    branches:
      - master

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: .

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Release

permissions:
  contents: write

jobs:
  build:
    environment: production
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Restore NuGet packages
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: nuget restore ${{env.SOLUTION_FILE_PATH}}

    - name: Build
      working-directory: ${{ env.GITHUB_WORKSPACE }}
      run: |
        msbuild `
          /m `
          /p:Configuration=${{ env.BUILD_CONFIGURATION }} `
          /p:Platform=x64 `
          /p:OutDir="${{ env.GITHUB_WORKSPACE }}\out\\" `
          ${{ env.SOLUTION_FILE_PATH }}

    - name: Archive build output
      working-directory: ${{ env.GITHUB_WORKSPACE }}
      run: |
        cd "${{ env.GITHUB_WORKSPACE }}\out\\"
        Compress-Archive -Path * -DestinationPath "ReClass.NET-DMAPlugin.zip" -Force
        
    - name: Upload to "latest" release (overwrite old asset)
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        gh release upload latest "${{ env.GITHUB_WORKSPACE }}\out\\ReClass.NET-DMAPlugin.zip" --clobber
